	;; Complete sample program for saruwatari
	;; Dato un Array di 10 numeri
	;; costruire un secondo array contente
	;; solo gli elementi del primo
	;; il cui valore e` superiore a 5          	

		.data
vet1:		.word64 1,2,3,4,5,6,7,8,9,10
string:		.asciiz "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d"
parametri:	.word64 0
vet2:		.word32 0,0,0,0,0,0,0,0,0,0

		.code
		ADDI R1,R0,0 ;puntatore al primo vettore
		ADDI R2,R0,0 ;puntatore al secondo vettore

	        ADDI R5,R0,5 	; valore di riferimento
	        ADDI R8,R0,40   ; lunghezza del vettore da processare

ciclo_ricerca:	LW R3,vet1(R1)
	        ADDI R0,R0,1

		SGT R3,R3,R5
	        ADDI R0,R0,0
	
	        ADDI R0,R0,0
		BNQZ R4,R0, minore
		;;e' pari
		SW R3,vet2(R2)
		ADDI R2,R2,4

minore:	 	ADDI R1,R1,4
	        ADDI R0,R0,0

	        SLT R6,R1,R8
	        ADDI R0,R0,0

	        ADDI R0,R0,0
	        BNQZ R6, ciclo_ricerca	
	
	;; Implementation:
	.data
	vet_1 :
	       ;; starting address
	       00000000000000000000000000000000000
	       00000000000000000000000000000000100
	       00000000000000000000000000000001000
	       00000000000000000000000000000001100
	       00000000000000000000000000000010000
	       00000000000000000000000000000010100
	       00000000000000000000000000000011000
	       00000000000000000000000000000011100
	       00000000000000000000000000000100000
	       00000000000000000000000000000100100
	       ;; ending address

	vet_2 :
	       ;; starting address
	       00000000000000000000000000000101000
	       00000000000000000000000000000101100
	       00000000000000000000000000000110000
	       00000000000000000000000000000110100
	       00000000000000000000000000000111000
	       00000000000000000000000000000111100
	       00000000000000000000000000001000000
	       00000000000000000000000000001000100
	       00000000000000000000000000001001000
	       00000000000000000000000000001001100
	       ;; ending address

	.code
0:	       000001 00000 00001 0000000000000000 -- ADDI R1,R0,0
	       000001 00000 00010 0000000000000000 -- ADDI R2,R0,0

8:	       000001 00000 00101 0000000000000101 -- ADDI R5,R0,5
	       000001 00000 01000 0000000000101000 -- ADDI R8,R0,40

ciclo_ricerca|16: 000011 00001 00011 0000000000000000 -- LW R3,vet1(R1)
	       000001 00000 00000 0000000000000000 -- ADDI R0,R0,0
	
24:	       010000 00011 00101 00100 00000000101 -- SGT R4,R3,R5
	       000001 00000 00000 0000000000000001 -- ADDI R0,R0,1

32:	       000001 00000 00000 0000000000000000 -- ADDI R0,R0,0
	       000101 00100 00000 0000000000001000 -- BEQZ R4, minore

40:	       000100 00010 00011 0000000000101000 -- SW R3,vet2(R2)
	       000001 00010 00010 0000000000000100 -- ADDI R2,R2,4

minore|48:     000001 00001 00001 0000000000000100 -- ADDI R1,R1,4
	       000001 00000 00000 0000000000000000 -- ADDI R0,R0,0

56:	       010000 00001 01000 00110 00000000100 -- SLT R6,R1,R8
	       000001 00000 00000 0000000000000001 -- ADDI R0,R0,0

64:	       000001 00000 00000 0000000000000000 -- ADDI R0,R0,0
	       000110 00110 00000 1111111111001000 -- BNQZ R6, ciclo_ricerca


00000100000000010000000000000000
00000100000000100000000000000000
00000100000001010000000000000101
00000100000010000000000000101000
00001100001000110000000000000000
00000100000000000000000000000000
01000000011001010010000000000101
00000100000000000000000000000001
00000100000000000000000000000000
00010100100000000000000000001000
00010000010000110000000000101000
00000100010000100000000000000100
00000100001000010000000000000100
00000100000000000000000000000000
01000000001010000011000000000100
00000100000000000000000000000001
00000100000000000000000000000000
00011000110000001111111111001000